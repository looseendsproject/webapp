%h1.page-title
  Finishers Map
= form_tag map_manage_finishers_path, :method => :get do
  .row.mb-0
    .col-9
      = label_tag :near, "#{@finishers&.size} Finishers Near", class: 'label'
    .col-2
      = label_tag :search, "Skill", class: 'label'
  .row.mb-4
    .col-9
      = text_field_tag :near, params[:near], class: 'form-control'
    .col-2
      = select_tag :skill_id, options_from_collection_for_select(Skill.sorted_by_popularity, "id", "name", params[:skill_id]), include_blank: true, class: 'form-select'
    .col-1
      = submit_tag "Search", name: nil, class: 'btn btn-primary'

.row.map-container{ style: "display: flex; margin-bottom:20px"}
  .col#map{ style: "height:500px; flex: 1"}

- if @finishers
  %table.table
    %thead
      %tr
        %th Name
        %th Email
        %th Address
      = render partial: 'finisher_row', collection: @finishers, as: :finisher

  = javascript_include_tag "https://maps.googleapis.com/maps/api/js?key=#{Rails.application.credentials.dig(:google, :maps_api_key)}&callback=initMap", defer: true

  :javascript
    function initMap(){
      const map = new google.maps.Map(document.getElementById("map"), {
        zoom: 10,
        center: { lat: #{@center[0]}, lng: #{@center[1]} },
      });

      const pinSVGFilled = "M 12,2 C 8.1340068,2 5,5.1340068 5,9 c 0,5.25 7,13 7,13 0,0 7,-7.75 7,-13 0,-3.8659932 -3.134007,-7 -7,-7 z";
      const labelOriginFilled =  new google.maps.Point(12,9);

      const projectIcon = {
        path: "m0,10l10,-10l10,10l-10,10l-10,-10z",
        anchor: new google.maps.Point(10,17),
        fillOpacity: 1,
        fillColor: "white",
        strokeWeight: 1,
        strokeColor: "#fd7e0d",
        scale: 1.5  ,
        labelOrigin: new google.maps.Point(10,10)
      };

      const projectLabel = {
        text: "Here",
        color: "#fd7e0d",
        fontSize: "10px",
        fontWeight: 'bold',
        fontFamily: 'cursive'
      };

      new google.maps.Marker({ position: { lat: #{@center[0]}, lng: #{@center[1]} }, zIndex: 9999, icon: projectIcon, label: projectLabel, map, optimized: false });

      const finishers = [#{ @finishers.map{|f| "{ position: { lat: #{f.latitude}, lng: #{f.longitude}}, title: '#{escape_javascript(f.name)}', skills: '#{f.rated_skills_string}', url: '/manage/finishers/#{f.id}', zIndex: #{@skill_id ? f.assessments.find_by(skill_id: @skill_id).rating : 0} }"}.join(',') }];

      const infowindow = new google.maps.InfoWindow({
        maxWidth: 200,
      });

      finishers.forEach(finisher => {
        const pinColor = finisher.zIndex === 3 ? "#22bc49" : finisher.zIndex === 2 ? "#dcce1f" : finisher.zIndex === 1 ? "#e72d2d" : "#3975EC";

        const icon = {
          path: pinSVGFilled,
          anchor: new google.maps.Point(12,17),
          fillOpacity: 1,
          fillColor: pinColor,
          strokeWeight: 2,
          strokeColor: "white",
          scale: 2,
          labelOrigin: labelOriginFilled
        }
        const label = {
          text: finisher.zIndex === 3 ? "E" : finisher.zIndex === 2 ? "I" : finisher.zIndex === 1 ? "B" : "F",
          color: "white",
          fontSize: "14px",
          fontWeight: 'bold',
        }

        const marker = new google.maps.Marker({ ...finisher, icon, label, map, optimized: false });

        marker.addListener("click", () => {
          fetch(`${finisher.url}/card`)
            .then(response => response.text())
            .then(html => {
              infowindow.setContent(html);
              infowindow.open({anchor: marker, map}); })
            .catch(error => { console.log(error)});
        });
      });
    }


    window.initMap = initMap;

